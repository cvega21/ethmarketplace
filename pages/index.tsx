import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import ActionButton from './components/ActionButton';
import Product from './components/Product';
import React, { useState, useEffect, useRef } from 'react';
import Web3 from 'web3';
import abi from './api/sample_abi';
import NavBar from './components/NavBar'
import Typed from 'typed.js';
import { initializeApp } from "firebase/app";
import { getAnalytics } from "firebase/analytics";

const firebaseConfig = {
  apiKey: "AIzaSyDUUrS6OUn2LJFC6oxRGMUJ4vYwaOIS8R8",
  authDomain: "portfolio-75ffa.firebaseapp.com",
  databaseURL: "https://portfolio-75ffa-default-rtdb.firebaseio.com",
  projectId: "portfolio-75ffa",
  storageBucket: "portfolio-75ffa.appspot.com",
  messagingSenderId: "171226664150",
  appId: "1:171226664150:web:2329c0be04baa8d456cd77",
  measurementId: "G-Y3HXME3XXL"
};

// Initialize Firebase
const app = initializeApp(firebaseConfig);
// need to create custom hook or dynamic import to use analytics in nextjs since navigator/geolocationa is not enabled
// const analytics = getAnalytics(app);

declare global {
  interface Window {
      ethereum: any;
  }
}

const Home: NextPage = () => {
  const [loggedIn, setLoggedIn] = useState(false);
  const [user, setUser] = useState('')
  const [web3IsEnabled, setWeb3IsEnabled] = useState(false);
  const web3js = useRef<Web3|null>(null);

  useEffect(() => {
    window.ethereum ? setWeb3IsEnabled(true) : void(0);
    web3js.current = new Web3(window.ethereum.currentProvider);
    console.log(web3js.current);
  }, [])
  
  setTimeout(() => {
    startContract();
  }, 500);

  const startContract = () => {
    // var cryptoZombiesAddress = "YOUR_CONTRACT_ADDRESS";
    let web3 = web3js.current as Web3;
    // testContract = new web3.eth.Contract(abi as any, cryptoZombiesAddress);
    // console.log(testContract);
  }

  const typedElement: any = useRef(null);
  const typed: any = useRef(null);
  
  useEffect(() => {
    const options = {
      strings: ['^300 Sneakers^400','^300 Gucci Belts^400','^300 Jewelry^400'],
      typeSpeed: 38,
      backSpeed: 18,
      loop: true
    };
    
    typed.current = new Typed(typedElement.current as Element, options);
    return () => {
      typed.current.destroy();
    }
  }, [])

  

  return (
    <div className="text-center">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="flex flex-1 flex-col items-center overflow-hidden">
        <NavBar/>
        <div className="text-center flex flex-col justify-center items-center">
          <h1 className="font-bold text-8xl w-full mt-12">
            The Metaverse for 
            <div className="text-green-500">
              <span ref={typedElement}></span>
            </div>
          </h1>
          <h2 className="font-light text-gray-500 text-4xl mt-8 flex items-center">
            Buy and sell real-life stuff as NFTs - powered by Ethereum 
            <Image src="/ethereum.svg" height={30} width={40} alt="ethereum"/>
          </h2>
          <a href="sell" className="mt-16">
            <button className="bg-indigo-200 hover:bg-indigo-600 text-indigo-800 hover:text-white font-bold text-xl py-3 px-8  rounded">
              List an Item
            </button>
          </a>
        </div>
        <div className="flex flex-col border mt-24">
          <h1 className="font-bold justify-self-start text-left ml-12 mt-6">Products for Sale</h1>
          <div className="flex">
            <Product
              image="🍔"
              title="half eaten mcchicken"
              price={0.05}
              action={loggedIn ? "buy" : "login"}
            />
            <Product
              image="👓"
              title="gucci sunglasses"
              price={0.05}
              action={loggedIn ? "buy" : "login"}
            />
            <Product
              image="🧢"
              title="fake supreme hat"
              price={0.05}
              action={loggedIn ? "buy" : "login"}
            />
          </div>
        </div>

      </main>
    </div>
  )
}

export default Home
